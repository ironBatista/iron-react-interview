{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { environment } from \"../environments/environment\";\nexport const GetActivities = times => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  localStorage.clear();\n  let storedActivities = localStorage.getItem(\"activities\");\n\n  if (!storedActivities) {\n    localStorage.setItem(\"activities\", JSON.stringify([]));\n  }\n\n  useEffect(() => {\n    for (let index = 0; index < times; index++) {\n      axios.get(`${environment.API.url}/activity`).then(response => {\n        const activities = JSON.parse(localStorage.getItem(\"activities\") || \"[]\");\n        activities.push(response.data);\n        localStorage.setItem(\"activities\", JSON.stringify(activities));\n        setData(activities);\n      }).catch(error => setError(error.message)).finally(() => setLoaded(true));\n    }\n  }, []);\n  return {\n    data,\n    error,\n    loaded\n  };\n};\n\n_s(GetActivities, \"9VKzmstdWCdUvMhJOm8zf6NWoPE=\");\n\n_c = GetActivities;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetActivities\");","map":{"version":3,"names":["axios","useEffect","useState","environment","GetActivities","times","data","setData","error","setError","loaded","setLoaded","localStorage","clear","storedActivities","getItem","setItem","JSON","stringify","index","get","API","url","then","response","activities","parse","push","catch","message","finally"],"sources":["/opt/spa/src/hooks/GetActivities.ts"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { environment } from \"../environments/environment\";\n\nexport const GetActivities = (times: number) => {\n  const [data, setData] = useState({});\n  const [error, setError] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  localStorage.clear()\n  let storedActivities = localStorage.getItem(\"activities\");\n\n  if (!storedActivities) {\n    localStorage.setItem(\"activities\", JSON.stringify([]));\n  }\n\n  useEffect(() => {\n    for (let index = 0; index < times; index++) {\n      axios\n        .get(`${environment.API.url}/activity`)\n        .then((response) => {\n          const activities: Array<Object> = JSON.parse(\n            localStorage.getItem(\"activities\") || \"[]\"\n          );\n          activities.push(response.data);\n          localStorage.setItem(\"activities\", JSON.stringify(activities));\n          setData(activities);\n        })\n        .catch((error) => setError(error.message))\n        .finally(() => setLoaded(true));\n    }\n  }, []);\n  return { data, error, loaded };\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAmB;EAAA;;EAC9C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;EACAU,YAAY,CAACC,KAAb;EACA,IAAIC,gBAAgB,GAAGF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAvB;;EAEA,IAAI,CAACD,gBAAL,EAAuB;IACrBF,YAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAnC;EACD;;EAEDjB,SAAS,CAAC,MAAM;IACd,KAAK,IAAIkB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,KAA5B,EAAmCc,KAAK,EAAxC,EAA4C;MAC1CnB,KAAK,CACFoB,GADH,CACQ,GAAEjB,WAAW,CAACkB,GAAZ,CAAgBC,GAAI,WAD9B,EAEGC,IAFH,CAESC,QAAD,IAAc;QAClB,MAAMC,UAAyB,GAAGR,IAAI,CAACS,KAAL,CAChCd,YAAY,CAACG,OAAb,CAAqB,YAArB,KAAsC,IADN,CAAlC;QAGAU,UAAU,CAACE,IAAX,CAAgBH,QAAQ,CAAClB,IAAzB;QACAM,YAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeO,UAAf,CAAnC;QACAlB,OAAO,CAACkB,UAAD,CAAP;MACD,CATH,EAUGG,KAVH,CAUUpB,KAAD,IAAWC,QAAQ,CAACD,KAAK,CAACqB,OAAP,CAV5B,EAWGC,OAXH,CAWW,MAAMnB,SAAS,CAAC,IAAD,CAX1B;IAYD;EACF,CAfQ,EAeN,EAfM,CAAT;EAgBA,OAAO;IAAEL,IAAF;IAAQE,KAAR;IAAeE;EAAf,CAAP;AACD,CA5BM;;GAAMN,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}