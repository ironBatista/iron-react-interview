{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { environment } from \"../environments/environment\";\nexport const GetActivities = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  let activities = JSON.parse(localStorage.getItem(\"activities\"));\n\n  if (!activities) {\n    localStorage.setItem(\"activities\", JSON.stringify([]));\n  }\n\n  useEffect(() => {\n    axios.get(`${environment.API.url}/activity`).then(response => {\n      localStorage.setItem(\"activities\", JSON.stringify(response.data));\n      let data1 = JSON.parse(activities);\n      setData(data1);\n    }).catch(error => setError(error.message)).finally(() => setLoaded(true));\n  }, []);\n  return {\n    data,\n    error,\n    loaded\n  };\n};\n\n_s(GetActivities, \"zGwXzhgVyshl1rTF0tnC+41LcHg=\");\n\n_c = GetActivities;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetActivities\");","map":{"version":3,"names":["axios","useEffect","useState","environment","GetActivities","data","setData","error","setError","loaded","setLoaded","activities","JSON","parse","localStorage","getItem","setItem","stringify","get","API","url","then","response","data1","catch","message","finally"],"sources":["/opt/spa/src/hooks/GetActivity.ts"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { environment } from \"../environments/environment\";\n\nexport const GetActivities = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  let activities = JSON.parse(localStorage.getItem(\"activities\"));\n\n  if (!activities) {\n    localStorage.setItem(\"activities\", JSON.stringify([]));\n  }\n\n  useEffect(() => {\n    axios\n      .get(`${environment.API.url}/activity`)\n      .then((response) => {\n        localStorage.setItem(\"activities\", JSON.stringify(response.data));\n        let data1 = JSON.parse(activities); \n        setData(data1);\n      })\n      .catch((error) => setError(error.message))\n      .finally(() => setLoaded(true));\n  }, []);\n  return { data, error, loaded };\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EACA,IAAIS,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;;EAEA,IAAI,CAACJ,UAAL,EAAiB;IACfG,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAe,EAAf,CAAnC;EACD;;EAEDhB,SAAS,CAAC,MAAM;IACdD,KAAK,CACFkB,GADH,CACQ,GAAEf,WAAW,CAACgB,GAAZ,CAAgBC,GAAI,WAD9B,EAEGC,IAFH,CAESC,QAAD,IAAc;MAClBR,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAeK,QAAQ,CAACjB,IAAxB,CAAnC;MACA,IAAIkB,KAAK,GAAGX,IAAI,CAACC,KAAL,CAAWF,UAAX,CAAZ;MACAL,OAAO,CAACiB,KAAD,CAAP;IACD,CANH,EAOGC,KAPH,CAOUjB,KAAD,IAAWC,QAAQ,CAACD,KAAK,CAACkB,OAAP,CAP5B,EAQGC,OARH,CAQW,MAAMhB,SAAS,CAAC,IAAD,CAR1B;EASD,CAVQ,EAUN,EAVM,CAAT;EAWA,OAAO;IAAEL,IAAF;IAAQE,KAAR;IAAeE;EAAf,CAAP;AACD,CAtBM;;GAAML,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}